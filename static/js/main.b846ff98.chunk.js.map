{"version":3,"sources":["components/Card/index.js","components/Scoreboard/index.js","App.js","index.js"],"names":["Card","props","className","onClick","clickedCard","id","src","image","alt","name","Scoreboard","topScore","score","shuffle","array","i","length","j","Math","floor","random","App","state","cards","showAlert","showSuccess","clickedcards","setState","indexOf","push","console","log","handleIncrement","makeShuffle","style","opacity","this","map","card","key","Component","ReactDOM","render","document","getElementById"],"mappings":"+gCAceA,G,MAXF,SAAAC,GAAK,OAEd,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,YAAYH,EAAMI,MAC3D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,MAAOC,IAAKP,EAAMQ,W,mBCW3BC,MAff,SAAoBT,GAClB,OACE,4BAAQC,UAAU,UAChB,6BACA,wBAAIG,GAAG,iBAAP,eAAoCJ,EAAMU,UACxC,wBAAIN,GAAG,cAAP,kBAAoCJ,EAAMW,OAC5C,2CACE,qGCHR,SAASC,EAAQC,GACf,IAAI,IAAIC,EAAID,EAAME,OAAQ,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAG,IADF,EAEhB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFgC,KAE5BD,EAAMG,GAFsB,KAIzC,OAAOH,E,IAiGMO,E,4MA5FbC,MAAQ,CACNC,QACAX,MAAO,EACPD,SAAU,EACVa,UAAW,EACXC,YAAa,EACbC,aAAc,I,EAGhBtB,YAAc,SAAAC,GACZ,IAAIqB,EAAe,EAAKJ,MAAMI,aAC1Bd,EAAQ,EAAKU,MAAMV,MACnBD,EAAW,EAAKW,MAAMX,SAC1B,EAAKgB,SAAS,CACZH,UAAW,KAGqB,IAA9BE,EAAaE,QAAQvB,IACrBqB,EAAaG,KAAKxB,GAClByB,QAAQC,IAAIL,GACZ,EAAKM,kBACL,EAAKC,eACuB,KAArB,EAAKX,MAAMV,MACpB,EAAKe,SAAS,CACZF,YAAa,EACbb,MAAO,EACPc,aAAc,MAGhB,EAAKC,SAAS,CACZf,MAAO,EACPc,aAAc,KAEhBI,QAAQC,IAAI,aACZ,EAAKJ,SAAS,CACZH,UAAW,KAIXZ,EAAQD,GACV,EAAKgB,SAAS,CACZhB,SAAUC,K,EAMhBoB,gBAAkB,WAChB,EAAKL,SAAS,CAAEf,MAAO,EAAKU,MAAMV,MAAQ,K,EAG5CqB,YAAc,WACZ,EAAKN,SAAS,CAAEJ,MAAOV,EAAQU,M,uDAGvB,IAAD,OACP,OACE,yBAAKrB,UAAU,aACf,yBACIA,UAAU,qBACVgC,MAAO,CAAEC,QAASC,KAAKd,MAAME,YAFjC,qBAME,yBACEtB,UAAU,sBACVgC,MAAO,CAAEC,QAASC,KAAKd,MAAMG,cAF/B,iDAMA,kBAAC,EAAD,CACEb,MAAOwB,KAAKd,MAAMV,MAClBD,SAAUyB,KAAKd,MAAMX,WAEzB,6BAEGyB,KAAKd,MAAMC,MAAMc,KAAI,SAAAC,GAAI,OAC1B,kBAAC,EAAD,CACEC,IAAKD,EAAKjC,GACVA,GAAIiC,EAAKjC,GACTI,KAAM6B,EAAK7B,KACXF,MAAO+B,EAAK/B,MACZH,YAAa,EAAKA,uB,GApFVoC,a,MCVlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b846ff98.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => (\n\n    <div className=\"card\" onClick={() => props.clickedCard(props.id)}>\n      <div className=\"img-container\">\n        <img src={props.image} alt={props.name} />\n        \n      </div>\n    </div>\n  );\n\n\nexport default Card;\n","import React from \"react\";\nimport \"./scoreboard.css\";\n\nfunction Scoreboard(props) {\n  return (\n    <header className=\"scoreB\">\n      <div>\n      <h4 id=\"current-score\">High Score: {props.topScore}</h4>\n        <h4 id=\"high-score\">Current Score: {props.score}</h4>\n      <h1>Memory Game</h1>\n        <h2>Click on a Star Wars character, but don't click it more than once!</h2>\n\n      </div>\n \n    </header>\n  );\n}\n\nexport default Scoreboard;","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\n// import Wrapper from \"./components/Wrapper\";\nimport cards from \"./cards.json\";\nimport \"./App.css\";\nimport Scoreboard from \"./components/Scoreboard\";\n\nfunction shuffle(array) {\n  for(let i = array.length -1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i +1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n\n  state = {\n    cards,\n    score: 0,\n    topScore: 0,\n    showAlert: 0,\n    showSuccess: 0,\n    clickedcards: []\n  };\n\n  clickedCard = id => {\n    let clickedcards = this.state.clickedcards;\n    let score = this.state.score;\n    let topScore = this.state.topScore;\n    this.setState({\n      showAlert: 0\n    });\n\n    if (clickedcards.indexOf(id) === -1) {\n        clickedcards.push(id);\n        console.log(clickedcards);\n        this.handleIncrement();\n        this.makeShuffle();\n    } else if (this.state.score === 12) {\n      this.setState({\n        showSuccess: 1,\n        score: 0,\n        clickedcards: []\n      });\n    } else {\n      this.setState({\n        score: 0,\n        clickedcards: []\n      });\n      console.log(\"duplicate\");\n      this.setState({\n        showAlert: 1\n      });\n    }\n\n    if (score > topScore) {\n      this.setState({\n        topScore: score\n      });\n    }\n  }; //close clickcard\n  \n\n  handleIncrement = () => {\n    this.setState({ score: this.state.score + 1});\n  };\n\n  makeShuffle = () => {\n    this.setState({ cards: shuffle(cards) });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n      <div\n          className=\"alert alert-danger\"\n          style={{ opacity: this.state.showAlert }}\n        >\n          Sorry! Try again!\n          </div>\n        <div\n          className=\"alert alert-success\"\n          style={{ opacity: this.state.showSuccess }}\n        >\n          Brilliant, you haven't clicked on duplicates!\n          </div>\n        <Scoreboard\n          score={this.state.score}\n          topScore={this.state.topScore}\n        />\n      <div>\n        \n        {this.state.cards.map(card => (\n        <Card \n          key={card.id}\n          id={card.id}\n          name={card.name}\n          image={card.image}\n          clickedCard={this.clickedCard}\n        />\n        ))}\n        </div>\n        </div>\n    );\n  } //close render\n\n} //class close\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}